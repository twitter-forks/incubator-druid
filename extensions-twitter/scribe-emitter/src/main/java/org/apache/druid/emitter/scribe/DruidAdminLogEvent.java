/**
 * Autogenerated by Thrift Compiler (0.11.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
package org.apache.druid.emitter.scribe;

@SuppressWarnings({"cast", "rawtypes", "serial", "unchecked", "unused"})
@javax.annotation.Generated(value = "Autogenerated by Thrift Compiler (0.11.0)", date = "2024-10-24")
public class DruidAdminLogEvent implements org.apache.thrift.TBase<DruidAdminLogEvent, DruidAdminLogEvent._Fields>, java.io.Serializable, Cloneable, Comparable<DruidAdminLogEvent> {
  private static final org.apache.thrift.protocol.TStruct STRUCT_DESC = new org.apache.thrift.protocol.TStruct("DruidAdminLogEvent");

  private static final org.apache.thrift.protocol.TField AUDIT_KEY_FIELD_DESC = new org.apache.thrift.protocol.TField("audit_key", org.apache.thrift.protocol.TType.STRING, (short)1);
  private static final org.apache.thrift.protocol.TField AUDIT_TYPE_FIELD_DESC = new org.apache.thrift.protocol.TField("audit_type", org.apache.thrift.protocol.TType.STRING, (short)2);
  private static final org.apache.thrift.protocol.TField AUTHOR_FIELD_DESC = new org.apache.thrift.protocol.TField("author", org.apache.thrift.protocol.TType.STRING, (short)3);
  private static final org.apache.thrift.protocol.TField COMMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("comment", org.apache.thrift.protocol.TType.STRING, (short)4);
  private static final org.apache.thrift.protocol.TField REMOTE_ADDRESS_FIELD_DESC = new org.apache.thrift.protocol.TField("remote_address", org.apache.thrift.protocol.TType.STRING, (short)5);
  private static final org.apache.thrift.protocol.TField CREATED_DATE_FIELD_DESC = new org.apache.thrift.protocol.TField("created_date", org.apache.thrift.protocol.TType.STRING, (short)6);
  private static final org.apache.thrift.protocol.TField PAYLOAD_FIELD_DESC = new org.apache.thrift.protocol.TField("payload", org.apache.thrift.protocol.TType.STRING, (short)7);
  private static final org.apache.thrift.protocol.TField ROLE_FIELD_DESC = new org.apache.thrift.protocol.TField("role", org.apache.thrift.protocol.TType.STRING, (short)8);
  private static final org.apache.thrift.protocol.TField DRUID_VERSION_FIELD_DESC = new org.apache.thrift.protocol.TField("druid_version", org.apache.thrift.protocol.TType.STRING, (short)9);
  private static final org.apache.thrift.protocol.TField ENVIRONMENT_FIELD_DESC = new org.apache.thrift.protocol.TField("environment", org.apache.thrift.protocol.TType.STRING, (short)10);
  private static final org.apache.thrift.protocol.TField DATACENTER_FIELD_DESC = new org.apache.thrift.protocol.TField("datacenter", org.apache.thrift.protocol.TType.STRING, (short)11);
  private static final org.apache.thrift.protocol.TField CLUSTER_NAME_FIELD_DESC = new org.apache.thrift.protocol.TField("cluster_name", org.apache.thrift.protocol.TType.STRING, (short)12);

  private static final org.apache.thrift.scheme.SchemeFactory STANDARD_SCHEME_FACTORY = new DruidAdminLogEventStandardSchemeFactory();
  private static final org.apache.thrift.scheme.SchemeFactory TUPLE_SCHEME_FACTORY = new DruidAdminLogEventTupleSchemeFactory();

  public java.lang.String audit_key; // required
  public java.lang.String audit_type; // required
  public java.lang.String author; // required
  public java.lang.String comment; // required
  public java.lang.String remote_address; // required
  public java.lang.String created_date; // required
  public java.lang.String payload; // required
  public java.lang.String role; // optional
  public java.lang.String druid_version; // optional
  public java.lang.String environment; // optional
  public java.lang.String datacenter; // optional
  public java.lang.String cluster_name; // optional

  /** The set of fields this struct contains, along with convenience methods for finding and manipulating them. */
  public enum _Fields implements org.apache.thrift.TFieldIdEnum {
    AUDIT_KEY((short)1, "audit_key"),
    AUDIT_TYPE((short)2, "audit_type"),
    AUTHOR((short)3, "author"),
    COMMENT((short)4, "comment"),
    REMOTE_ADDRESS((short)5, "remote_address"),
    CREATED_DATE((short)6, "created_date"),
    PAYLOAD((short)7, "payload"),
    ROLE((short)8, "role"),
    DRUID_VERSION((short)9, "druid_version"),
    ENVIRONMENT((short)10, "environment"),
    DATACENTER((short)11, "datacenter"),
    CLUSTER_NAME((short)12, "cluster_name");

    private static final java.util.Map<java.lang.String, _Fields> byName = new java.util.HashMap<java.lang.String, _Fields>();

    static {
      for (_Fields field : java.util.EnumSet.allOf(_Fields.class)) {
        byName.put(field.getFieldName(), field);
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, or null if its not found.
     */
    public static _Fields findByThriftId(int fieldId) {
      switch(fieldId) {
        case 1: // AUDIT_KEY
          return AUDIT_KEY;
        case 2: // AUDIT_TYPE
          return AUDIT_TYPE;
        case 3: // AUTHOR
          return AUTHOR;
        case 4: // COMMENT
          return COMMENT;
        case 5: // REMOTE_ADDRESS
          return REMOTE_ADDRESS;
        case 6: // CREATED_DATE
          return CREATED_DATE;
        case 7: // PAYLOAD
          return PAYLOAD;
        case 8: // ROLE
          return ROLE;
        case 9: // DRUID_VERSION
          return DRUID_VERSION;
        case 10: // ENVIRONMENT
          return ENVIRONMENT;
        case 11: // DATACENTER
          return DATACENTER;
        case 12: // CLUSTER_NAME
          return CLUSTER_NAME;
        default:
          return null;
      }
    }

    /**
     * Find the _Fields constant that matches fieldId, throwing an exception
     * if it is not found.
     */
    public static _Fields findByThriftIdOrThrow(int fieldId) {
      _Fields fields = findByThriftId(fieldId);
      if (fields == null) throw new java.lang.IllegalArgumentException("Field " + fieldId + " doesn't exist!");
      return fields;
    }

    /**
     * Find the _Fields constant that matches name, or null if its not found.
     */
    public static _Fields findByName(java.lang.String name) {
      return byName.get(name);
    }

    private final short _thriftId;
    private final java.lang.String _fieldName;

    _Fields(short thriftId, java.lang.String fieldName) {
      _thriftId = thriftId;
      _fieldName = fieldName;
    }

    public short getThriftFieldId() {
      return _thriftId;
    }

    public java.lang.String getFieldName() {
      return _fieldName;
    }
  }

  // isset id assignments
  private static final _Fields optionals[] = {_Fields.ROLE,_Fields.DRUID_VERSION,_Fields.ENVIRONMENT,_Fields.DATACENTER,_Fields.CLUSTER_NAME};
  public static final java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> metaDataMap;
  static {
    java.util.Map<_Fields, org.apache.thrift.meta_data.FieldMetaData> tmpMap = new java.util.EnumMap<_Fields, org.apache.thrift.meta_data.FieldMetaData>(_Fields.class);
    tmpMap.put(_Fields.AUDIT_KEY, new org.apache.thrift.meta_data.FieldMetaData("audit_key", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUDIT_TYPE, new org.apache.thrift.meta_data.FieldMetaData("audit_type", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.AUTHOR, new org.apache.thrift.meta_data.FieldMetaData("author", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.COMMENT, new org.apache.thrift.meta_data.FieldMetaData("comment", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.REMOTE_ADDRESS, new org.apache.thrift.meta_data.FieldMetaData("remote_address", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CREATED_DATE, new org.apache.thrift.meta_data.FieldMetaData("created_date", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.PAYLOAD, new org.apache.thrift.meta_data.FieldMetaData("payload", org.apache.thrift.TFieldRequirementType.REQUIRED, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ROLE, new org.apache.thrift.meta_data.FieldMetaData("role", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DRUID_VERSION, new org.apache.thrift.meta_data.FieldMetaData("druid_version", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.ENVIRONMENT, new org.apache.thrift.meta_data.FieldMetaData("environment", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.DATACENTER, new org.apache.thrift.meta_data.FieldMetaData("datacenter", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    tmpMap.put(_Fields.CLUSTER_NAME, new org.apache.thrift.meta_data.FieldMetaData("cluster_name", org.apache.thrift.TFieldRequirementType.OPTIONAL, 
        new org.apache.thrift.meta_data.FieldValueMetaData(org.apache.thrift.protocol.TType.STRING)));
    metaDataMap = java.util.Collections.unmodifiableMap(tmpMap);
    org.apache.thrift.meta_data.FieldMetaData.addStructMetaDataMap(DruidAdminLogEvent.class, metaDataMap);
  }

  public DruidAdminLogEvent() {
  }

  public DruidAdminLogEvent(
    java.lang.String audit_key,
    java.lang.String audit_type,
    java.lang.String author,
    java.lang.String comment,
    java.lang.String remote_address,
    java.lang.String created_date,
    java.lang.String payload)
  {
    this();
    this.audit_key = audit_key;
    this.audit_type = audit_type;
    this.author = author;
    this.comment = comment;
    this.remote_address = remote_address;
    this.created_date = created_date;
    this.payload = payload;
  }

  /**
   * Performs a deep copy on <i>other</i>.
   */
  public DruidAdminLogEvent(DruidAdminLogEvent other) {
    if (other.isSetAudit_key()) {
      this.audit_key = other.audit_key;
    }
    if (other.isSetAudit_type()) {
      this.audit_type = other.audit_type;
    }
    if (other.isSetAuthor()) {
      this.author = other.author;
    }
    if (other.isSetComment()) {
      this.comment = other.comment;
    }
    if (other.isSetRemote_address()) {
      this.remote_address = other.remote_address;
    }
    if (other.isSetCreated_date()) {
      this.created_date = other.created_date;
    }
    if (other.isSetPayload()) {
      this.payload = other.payload;
    }
    if (other.isSetRole()) {
      this.role = other.role;
    }
    if (other.isSetDruid_version()) {
      this.druid_version = other.druid_version;
    }
    if (other.isSetEnvironment()) {
      this.environment = other.environment;
    }
    if (other.isSetDatacenter()) {
      this.datacenter = other.datacenter;
    }
    if (other.isSetCluster_name()) {
      this.cluster_name = other.cluster_name;
    }
  }

  public DruidAdminLogEvent deepCopy() {
    return new DruidAdminLogEvent(this);
  }

  @Override
  public void clear() {
    this.audit_key = null;
    this.audit_type = null;
    this.author = null;
    this.comment = null;
    this.remote_address = null;
    this.created_date = null;
    this.payload = null;
    this.role = null;
    this.druid_version = null;
    this.environment = null;
    this.datacenter = null;
    this.cluster_name = null;
  }

  public java.lang.String getAudit_key() {
    return this.audit_key;
  }

  public DruidAdminLogEvent setAudit_key(java.lang.String audit_key) {
    this.audit_key = audit_key;
    return this;
  }

  public void unsetAudit_key() {
    this.audit_key = null;
  }

  /** Returns true if field audit_key is set (has been assigned a value) and false otherwise */
  public boolean isSetAudit_key() {
    return this.audit_key != null;
  }

  public void setAudit_keyIsSet(boolean value) {
    if (!value) {
      this.audit_key = null;
    }
  }

  public java.lang.String getAudit_type() {
    return this.audit_type;
  }

  public DruidAdminLogEvent setAudit_type(java.lang.String audit_type) {
    this.audit_type = audit_type;
    return this;
  }

  public void unsetAudit_type() {
    this.audit_type = null;
  }

  /** Returns true if field audit_type is set (has been assigned a value) and false otherwise */
  public boolean isSetAudit_type() {
    return this.audit_type != null;
  }

  public void setAudit_typeIsSet(boolean value) {
    if (!value) {
      this.audit_type = null;
    }
  }

  public java.lang.String getAuthor() {
    return this.author;
  }

  public DruidAdminLogEvent setAuthor(java.lang.String author) {
    this.author = author;
    return this;
  }

  public void unsetAuthor() {
    this.author = null;
  }

  /** Returns true if field author is set (has been assigned a value) and false otherwise */
  public boolean isSetAuthor() {
    return this.author != null;
  }

  public void setAuthorIsSet(boolean value) {
    if (!value) {
      this.author = null;
    }
  }

  public java.lang.String getComment() {
    return this.comment;
  }

  public DruidAdminLogEvent setComment(java.lang.String comment) {
    this.comment = comment;
    return this;
  }

  public void unsetComment() {
    this.comment = null;
  }

  /** Returns true if field comment is set (has been assigned a value) and false otherwise */
  public boolean isSetComment() {
    return this.comment != null;
  }

  public void setCommentIsSet(boolean value) {
    if (!value) {
      this.comment = null;
    }
  }

  public java.lang.String getRemote_address() {
    return this.remote_address;
  }

  public DruidAdminLogEvent setRemote_address(java.lang.String remote_address) {
    this.remote_address = remote_address;
    return this;
  }

  public void unsetRemote_address() {
    this.remote_address = null;
  }

  /** Returns true if field remote_address is set (has been assigned a value) and false otherwise */
  public boolean isSetRemote_address() {
    return this.remote_address != null;
  }

  public void setRemote_addressIsSet(boolean value) {
    if (!value) {
      this.remote_address = null;
    }
  }

  public java.lang.String getCreated_date() {
    return this.created_date;
  }

  public DruidAdminLogEvent setCreated_date(java.lang.String created_date) {
    this.created_date = created_date;
    return this;
  }

  public void unsetCreated_date() {
    this.created_date = null;
  }

  /** Returns true if field created_date is set (has been assigned a value) and false otherwise */
  public boolean isSetCreated_date() {
    return this.created_date != null;
  }

  public void setCreated_dateIsSet(boolean value) {
    if (!value) {
      this.created_date = null;
    }
  }

  public java.lang.String getPayload() {
    return this.payload;
  }

  public DruidAdminLogEvent setPayload(java.lang.String payload) {
    this.payload = payload;
    return this;
  }

  public void unsetPayload() {
    this.payload = null;
  }

  /** Returns true if field payload is set (has been assigned a value) and false otherwise */
  public boolean isSetPayload() {
    return this.payload != null;
  }

  public void setPayloadIsSet(boolean value) {
    if (!value) {
      this.payload = null;
    }
  }

  public java.lang.String getRole() {
    return this.role;
  }

  public DruidAdminLogEvent setRole(java.lang.String role) {
    this.role = role;
    return this;
  }

  public void unsetRole() {
    this.role = null;
  }

  /** Returns true if field role is set (has been assigned a value) and false otherwise */
  public boolean isSetRole() {
    return this.role != null;
  }

  public void setRoleIsSet(boolean value) {
    if (!value) {
      this.role = null;
    }
  }

  public java.lang.String getDruid_version() {
    return this.druid_version;
  }

  public DruidAdminLogEvent setDruid_version(java.lang.String druid_version) {
    this.druid_version = druid_version;
    return this;
  }

  public void unsetDruid_version() {
    this.druid_version = null;
  }

  /** Returns true if field druid_version is set (has been assigned a value) and false otherwise */
  public boolean isSetDruid_version() {
    return this.druid_version != null;
  }

  public void setDruid_versionIsSet(boolean value) {
    if (!value) {
      this.druid_version = null;
    }
  }

  public java.lang.String getEnvironment() {
    return this.environment;
  }

  public DruidAdminLogEvent setEnvironment(java.lang.String environment) {
    this.environment = environment;
    return this;
  }

  public void unsetEnvironment() {
    this.environment = null;
  }

  /** Returns true if field environment is set (has been assigned a value) and false otherwise */
  public boolean isSetEnvironment() {
    return this.environment != null;
  }

  public void setEnvironmentIsSet(boolean value) {
    if (!value) {
      this.environment = null;
    }
  }

  public java.lang.String getDatacenter() {
    return this.datacenter;
  }

  public DruidAdminLogEvent setDatacenter(java.lang.String datacenter) {
    this.datacenter = datacenter;
    return this;
  }

  public void unsetDatacenter() {
    this.datacenter = null;
  }

  /** Returns true if field datacenter is set (has been assigned a value) and false otherwise */
  public boolean isSetDatacenter() {
    return this.datacenter != null;
  }

  public void setDatacenterIsSet(boolean value) {
    if (!value) {
      this.datacenter = null;
    }
  }

  public java.lang.String getCluster_name() {
    return this.cluster_name;
  }

  public DruidAdminLogEvent setCluster_name(java.lang.String cluster_name) {
    this.cluster_name = cluster_name;
    return this;
  }

  public void unsetCluster_name() {
    this.cluster_name = null;
  }

  /** Returns true if field cluster_name is set (has been assigned a value) and false otherwise */
  public boolean isSetCluster_name() {
    return this.cluster_name != null;
  }

  public void setCluster_nameIsSet(boolean value) {
    if (!value) {
      this.cluster_name = null;
    }
  }

  public void setFieldValue(_Fields field, java.lang.Object value) {
    switch (field) {
    case AUDIT_KEY:
      if (value == null) {
        unsetAudit_key();
      } else {
        setAudit_key((java.lang.String)value);
      }
      break;

    case AUDIT_TYPE:
      if (value == null) {
        unsetAudit_type();
      } else {
        setAudit_type((java.lang.String)value);
      }
      break;

    case AUTHOR:
      if (value == null) {
        unsetAuthor();
      } else {
        setAuthor((java.lang.String)value);
      }
      break;

    case COMMENT:
      if (value == null) {
        unsetComment();
      } else {
        setComment((java.lang.String)value);
      }
      break;

    case REMOTE_ADDRESS:
      if (value == null) {
        unsetRemote_address();
      } else {
        setRemote_address((java.lang.String)value);
      }
      break;

    case CREATED_DATE:
      if (value == null) {
        unsetCreated_date();
      } else {
        setCreated_date((java.lang.String)value);
      }
      break;

    case PAYLOAD:
      if (value == null) {
        unsetPayload();
      } else {
        setPayload((java.lang.String)value);
      }
      break;

    case ROLE:
      if (value == null) {
        unsetRole();
      } else {
        setRole((java.lang.String)value);
      }
      break;

    case DRUID_VERSION:
      if (value == null) {
        unsetDruid_version();
      } else {
        setDruid_version((java.lang.String)value);
      }
      break;

    case ENVIRONMENT:
      if (value == null) {
        unsetEnvironment();
      } else {
        setEnvironment((java.lang.String)value);
      }
      break;

    case DATACENTER:
      if (value == null) {
        unsetDatacenter();
      } else {
        setDatacenter((java.lang.String)value);
      }
      break;

    case CLUSTER_NAME:
      if (value == null) {
        unsetCluster_name();
      } else {
        setCluster_name((java.lang.String)value);
      }
      break;

    }
  }

  public java.lang.Object getFieldValue(_Fields field) {
    switch (field) {
    case AUDIT_KEY:
      return getAudit_key();

    case AUDIT_TYPE:
      return getAudit_type();

    case AUTHOR:
      return getAuthor();

    case COMMENT:
      return getComment();

    case REMOTE_ADDRESS:
      return getRemote_address();

    case CREATED_DATE:
      return getCreated_date();

    case PAYLOAD:
      return getPayload();

    case ROLE:
      return getRole();

    case DRUID_VERSION:
      return getDruid_version();

    case ENVIRONMENT:
      return getEnvironment();

    case DATACENTER:
      return getDatacenter();

    case CLUSTER_NAME:
      return getCluster_name();

    }
    throw new java.lang.IllegalStateException();
  }

  /** Returns true if field corresponding to fieldID is set (has been assigned a value) and false otherwise */
  public boolean isSet(_Fields field) {
    if (field == null) {
      throw new java.lang.IllegalArgumentException();
    }

    switch (field) {
    case AUDIT_KEY:
      return isSetAudit_key();
    case AUDIT_TYPE:
      return isSetAudit_type();
    case AUTHOR:
      return isSetAuthor();
    case COMMENT:
      return isSetComment();
    case REMOTE_ADDRESS:
      return isSetRemote_address();
    case CREATED_DATE:
      return isSetCreated_date();
    case PAYLOAD:
      return isSetPayload();
    case ROLE:
      return isSetRole();
    case DRUID_VERSION:
      return isSetDruid_version();
    case ENVIRONMENT:
      return isSetEnvironment();
    case DATACENTER:
      return isSetDatacenter();
    case CLUSTER_NAME:
      return isSetCluster_name();
    }
    throw new java.lang.IllegalStateException();
  }

  @Override
  public boolean equals(java.lang.Object that) {
    if (that == null)
      return false;
    if (that instanceof DruidAdminLogEvent)
      return this.equals((DruidAdminLogEvent)that);
    return false;
  }

  public boolean equals(DruidAdminLogEvent that) {
    if (that == null)
      return false;
    if (this == that)
      return true;

    boolean this_present_audit_key = true && this.isSetAudit_key();
    boolean that_present_audit_key = true && that.isSetAudit_key();
    if (this_present_audit_key || that_present_audit_key) {
      if (!(this_present_audit_key && that_present_audit_key))
        return false;
      if (!this.audit_key.equals(that.audit_key))
        return false;
    }

    boolean this_present_audit_type = true && this.isSetAudit_type();
    boolean that_present_audit_type = true && that.isSetAudit_type();
    if (this_present_audit_type || that_present_audit_type) {
      if (!(this_present_audit_type && that_present_audit_type))
        return false;
      if (!this.audit_type.equals(that.audit_type))
        return false;
    }

    boolean this_present_author = true && this.isSetAuthor();
    boolean that_present_author = true && that.isSetAuthor();
    if (this_present_author || that_present_author) {
      if (!(this_present_author && that_present_author))
        return false;
      if (!this.author.equals(that.author))
        return false;
    }

    boolean this_present_comment = true && this.isSetComment();
    boolean that_present_comment = true && that.isSetComment();
    if (this_present_comment || that_present_comment) {
      if (!(this_present_comment && that_present_comment))
        return false;
      if (!this.comment.equals(that.comment))
        return false;
    }

    boolean this_present_remote_address = true && this.isSetRemote_address();
    boolean that_present_remote_address = true && that.isSetRemote_address();
    if (this_present_remote_address || that_present_remote_address) {
      if (!(this_present_remote_address && that_present_remote_address))
        return false;
      if (!this.remote_address.equals(that.remote_address))
        return false;
    }

    boolean this_present_created_date = true && this.isSetCreated_date();
    boolean that_present_created_date = true && that.isSetCreated_date();
    if (this_present_created_date || that_present_created_date) {
      if (!(this_present_created_date && that_present_created_date))
        return false;
      if (!this.created_date.equals(that.created_date))
        return false;
    }

    boolean this_present_payload = true && this.isSetPayload();
    boolean that_present_payload = true && that.isSetPayload();
    if (this_present_payload || that_present_payload) {
      if (!(this_present_payload && that_present_payload))
        return false;
      if (!this.payload.equals(that.payload))
        return false;
    }

    boolean this_present_role = true && this.isSetRole();
    boolean that_present_role = true && that.isSetRole();
    if (this_present_role || that_present_role) {
      if (!(this_present_role && that_present_role))
        return false;
      if (!this.role.equals(that.role))
        return false;
    }

    boolean this_present_druid_version = true && this.isSetDruid_version();
    boolean that_present_druid_version = true && that.isSetDruid_version();
    if (this_present_druid_version || that_present_druid_version) {
      if (!(this_present_druid_version && that_present_druid_version))
        return false;
      if (!this.druid_version.equals(that.druid_version))
        return false;
    }

    boolean this_present_environment = true && this.isSetEnvironment();
    boolean that_present_environment = true && that.isSetEnvironment();
    if (this_present_environment || that_present_environment) {
      if (!(this_present_environment && that_present_environment))
        return false;
      if (!this.environment.equals(that.environment))
        return false;
    }

    boolean this_present_datacenter = true && this.isSetDatacenter();
    boolean that_present_datacenter = true && that.isSetDatacenter();
    if (this_present_datacenter || that_present_datacenter) {
      if (!(this_present_datacenter && that_present_datacenter))
        return false;
      if (!this.datacenter.equals(that.datacenter))
        return false;
    }

    boolean this_present_cluster_name = true && this.isSetCluster_name();
    boolean that_present_cluster_name = true && that.isSetCluster_name();
    if (this_present_cluster_name || that_present_cluster_name) {
      if (!(this_present_cluster_name && that_present_cluster_name))
        return false;
      if (!this.cluster_name.equals(that.cluster_name))
        return false;
    }

    return true;
  }

  @Override
  public int hashCode() {
    int hashCode = 1;

    hashCode = hashCode * 8191 + ((isSetAudit_key()) ? 131071 : 524287);
    if (isSetAudit_key())
      hashCode = hashCode * 8191 + audit_key.hashCode();

    hashCode = hashCode * 8191 + ((isSetAudit_type()) ? 131071 : 524287);
    if (isSetAudit_type())
      hashCode = hashCode * 8191 + audit_type.hashCode();

    hashCode = hashCode * 8191 + ((isSetAuthor()) ? 131071 : 524287);
    if (isSetAuthor())
      hashCode = hashCode * 8191 + author.hashCode();

    hashCode = hashCode * 8191 + ((isSetComment()) ? 131071 : 524287);
    if (isSetComment())
      hashCode = hashCode * 8191 + comment.hashCode();

    hashCode = hashCode * 8191 + ((isSetRemote_address()) ? 131071 : 524287);
    if (isSetRemote_address())
      hashCode = hashCode * 8191 + remote_address.hashCode();

    hashCode = hashCode * 8191 + ((isSetCreated_date()) ? 131071 : 524287);
    if (isSetCreated_date())
      hashCode = hashCode * 8191 + created_date.hashCode();

    hashCode = hashCode * 8191 + ((isSetPayload()) ? 131071 : 524287);
    if (isSetPayload())
      hashCode = hashCode * 8191 + payload.hashCode();

    hashCode = hashCode * 8191 + ((isSetRole()) ? 131071 : 524287);
    if (isSetRole())
      hashCode = hashCode * 8191 + role.hashCode();

    hashCode = hashCode * 8191 + ((isSetDruid_version()) ? 131071 : 524287);
    if (isSetDruid_version())
      hashCode = hashCode * 8191 + druid_version.hashCode();

    hashCode = hashCode * 8191 + ((isSetEnvironment()) ? 131071 : 524287);
    if (isSetEnvironment())
      hashCode = hashCode * 8191 + environment.hashCode();

    hashCode = hashCode * 8191 + ((isSetDatacenter()) ? 131071 : 524287);
    if (isSetDatacenter())
      hashCode = hashCode * 8191 + datacenter.hashCode();

    hashCode = hashCode * 8191 + ((isSetCluster_name()) ? 131071 : 524287);
    if (isSetCluster_name())
      hashCode = hashCode * 8191 + cluster_name.hashCode();

    return hashCode;
  }

  @Override
  public int compareTo(DruidAdminLogEvent other) {
    if (!getClass().equals(other.getClass())) {
      return getClass().getName().compareTo(other.getClass().getName());
    }

    int lastComparison = 0;

    lastComparison = java.lang.Boolean.valueOf(isSetAudit_key()).compareTo(other.isSetAudit_key());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAudit_key()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.audit_key, other.audit_key);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAudit_type()).compareTo(other.isSetAudit_type());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAudit_type()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.audit_type, other.audit_type);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetAuthor()).compareTo(other.isSetAuthor());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetAuthor()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.author, other.author);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetComment()).compareTo(other.isSetComment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetComment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.comment, other.comment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRemote_address()).compareTo(other.isSetRemote_address());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRemote_address()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.remote_address, other.remote_address);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCreated_date()).compareTo(other.isSetCreated_date());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCreated_date()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.created_date, other.created_date);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetPayload()).compareTo(other.isSetPayload());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetPayload()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.payload, other.payload);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetRole()).compareTo(other.isSetRole());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetRole()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.role, other.role);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDruid_version()).compareTo(other.isSetDruid_version());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDruid_version()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.druid_version, other.druid_version);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetEnvironment()).compareTo(other.isSetEnvironment());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetEnvironment()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.environment, other.environment);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetDatacenter()).compareTo(other.isSetDatacenter());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetDatacenter()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.datacenter, other.datacenter);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    lastComparison = java.lang.Boolean.valueOf(isSetCluster_name()).compareTo(other.isSetCluster_name());
    if (lastComparison != 0) {
      return lastComparison;
    }
    if (isSetCluster_name()) {
      lastComparison = org.apache.thrift.TBaseHelper.compareTo(this.cluster_name, other.cluster_name);
      if (lastComparison != 0) {
        return lastComparison;
      }
    }
    return 0;
  }

  public _Fields fieldForId(int fieldId) {
    return _Fields.findByThriftId(fieldId);
  }

  public void read(org.apache.thrift.protocol.TProtocol iprot) throws org.apache.thrift.TException {
    scheme(iprot).read(iprot, this);
  }

  public void write(org.apache.thrift.protocol.TProtocol oprot) throws org.apache.thrift.TException {
    scheme(oprot).write(oprot, this);
  }

  @Override
  public java.lang.String toString() {
    java.lang.StringBuilder sb = new java.lang.StringBuilder("DruidAdminLogEvent(");
    boolean first = true;

    sb.append("audit_key:");
    if (this.audit_key == null) {
      sb.append("null");
    } else {
      sb.append(this.audit_key);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("audit_type:");
    if (this.audit_type == null) {
      sb.append("null");
    } else {
      sb.append(this.audit_type);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("author:");
    if (this.author == null) {
      sb.append("null");
    } else {
      sb.append(this.author);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("comment:");
    if (this.comment == null) {
      sb.append("null");
    } else {
      sb.append(this.comment);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("remote_address:");
    if (this.remote_address == null) {
      sb.append("null");
    } else {
      sb.append(this.remote_address);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("created_date:");
    if (this.created_date == null) {
      sb.append("null");
    } else {
      sb.append(this.created_date);
    }
    first = false;
    if (!first) sb.append(", ");
    sb.append("payload:");
    if (this.payload == null) {
      sb.append("null");
    } else {
      sb.append(this.payload);
    }
    first = false;
    if (isSetRole()) {
      if (!first) sb.append(", ");
      sb.append("role:");
      if (this.role == null) {
        sb.append("null");
      } else {
        sb.append(this.role);
      }
      first = false;
    }
    if (isSetDruid_version()) {
      if (!first) sb.append(", ");
      sb.append("druid_version:");
      if (this.druid_version == null) {
        sb.append("null");
      } else {
        sb.append(this.druid_version);
      }
      first = false;
    }
    if (isSetEnvironment()) {
      if (!first) sb.append(", ");
      sb.append("environment:");
      if (this.environment == null) {
        sb.append("null");
      } else {
        sb.append(this.environment);
      }
      first = false;
    }
    if (isSetDatacenter()) {
      if (!first) sb.append(", ");
      sb.append("datacenter:");
      if (this.datacenter == null) {
        sb.append("null");
      } else {
        sb.append(this.datacenter);
      }
      first = false;
    }
    if (isSetCluster_name()) {
      if (!first) sb.append(", ");
      sb.append("cluster_name:");
      if (this.cluster_name == null) {
        sb.append("null");
      } else {
        sb.append(this.cluster_name);
      }
      first = false;
    }
    sb.append(")");
    return sb.toString();
  }

  public void validate() throws org.apache.thrift.TException {
    // check for required fields
    if (audit_key == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'audit_key' was not present! Struct: " + toString());
    }
    if (audit_type == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'audit_type' was not present! Struct: " + toString());
    }
    if (author == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'author' was not present! Struct: " + toString());
    }
    if (comment == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'comment' was not present! Struct: " + toString());
    }
    if (remote_address == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'remote_address' was not present! Struct: " + toString());
    }
    if (created_date == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'created_date' was not present! Struct: " + toString());
    }
    if (payload == null) {
      throw new org.apache.thrift.protocol.TProtocolException("Required field 'payload' was not present! Struct: " + toString());
    }
    // check for sub-struct validity
  }

  private void writeObject(java.io.ObjectOutputStream out) throws java.io.IOException {
    try {
      write(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(out)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private void readObject(java.io.ObjectInputStream in) throws java.io.IOException, java.lang.ClassNotFoundException {
    try {
      read(new org.apache.thrift.protocol.TCompactProtocol(new org.apache.thrift.transport.TIOStreamTransport(in)));
    } catch (org.apache.thrift.TException te) {
      throw new java.io.IOException(te);
    }
  }

  private static class DruidAdminLogEventStandardSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DruidAdminLogEventStandardScheme getScheme() {
      return new DruidAdminLogEventStandardScheme();
    }
  }

  private static class DruidAdminLogEventStandardScheme extends org.apache.thrift.scheme.StandardScheme<DruidAdminLogEvent> {

    public void read(org.apache.thrift.protocol.TProtocol iprot, DruidAdminLogEvent struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TField schemeField;
      iprot.readStructBegin();
      while (true)
      {
        schemeField = iprot.readFieldBegin();
        if (schemeField.type == org.apache.thrift.protocol.TType.STOP) { 
          break;
        }
        switch (schemeField.id) {
          case 1: // AUDIT_KEY
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.audit_key = iprot.readString();
              struct.setAudit_keyIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 2: // AUDIT_TYPE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.audit_type = iprot.readString();
              struct.setAudit_typeIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 3: // AUTHOR
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.author = iprot.readString();
              struct.setAuthorIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 4: // COMMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.comment = iprot.readString();
              struct.setCommentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 5: // REMOTE_ADDRESS
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.remote_address = iprot.readString();
              struct.setRemote_addressIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 6: // CREATED_DATE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.created_date = iprot.readString();
              struct.setCreated_dateIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 7: // PAYLOAD
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.payload = iprot.readString();
              struct.setPayloadIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 8: // ROLE
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.role = iprot.readString();
              struct.setRoleIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 9: // DRUID_VERSION
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.druid_version = iprot.readString();
              struct.setDruid_versionIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 10: // ENVIRONMENT
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.environment = iprot.readString();
              struct.setEnvironmentIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 11: // DATACENTER
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.datacenter = iprot.readString();
              struct.setDatacenterIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          case 12: // CLUSTER_NAME
            if (schemeField.type == org.apache.thrift.protocol.TType.STRING) {
              struct.cluster_name = iprot.readString();
              struct.setCluster_nameIsSet(true);
            } else { 
              org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
            }
            break;
          default:
            org.apache.thrift.protocol.TProtocolUtil.skip(iprot, schemeField.type);
        }
        iprot.readFieldEnd();
      }
      iprot.readStructEnd();

      // check for required fields of primitive type, which can't be checked in the validate method
      struct.validate();
    }

    public void write(org.apache.thrift.protocol.TProtocol oprot, DruidAdminLogEvent struct) throws org.apache.thrift.TException {
      struct.validate();

      oprot.writeStructBegin(STRUCT_DESC);
      if (struct.audit_key != null) {
        oprot.writeFieldBegin(AUDIT_KEY_FIELD_DESC);
        oprot.writeString(struct.audit_key);
        oprot.writeFieldEnd();
      }
      if (struct.audit_type != null) {
        oprot.writeFieldBegin(AUDIT_TYPE_FIELD_DESC);
        oprot.writeString(struct.audit_type);
        oprot.writeFieldEnd();
      }
      if (struct.author != null) {
        oprot.writeFieldBegin(AUTHOR_FIELD_DESC);
        oprot.writeString(struct.author);
        oprot.writeFieldEnd();
      }
      if (struct.comment != null) {
        oprot.writeFieldBegin(COMMENT_FIELD_DESC);
        oprot.writeString(struct.comment);
        oprot.writeFieldEnd();
      }
      if (struct.remote_address != null) {
        oprot.writeFieldBegin(REMOTE_ADDRESS_FIELD_DESC);
        oprot.writeString(struct.remote_address);
        oprot.writeFieldEnd();
      }
      if (struct.created_date != null) {
        oprot.writeFieldBegin(CREATED_DATE_FIELD_DESC);
        oprot.writeString(struct.created_date);
        oprot.writeFieldEnd();
      }
      if (struct.payload != null) {
        oprot.writeFieldBegin(PAYLOAD_FIELD_DESC);
        oprot.writeString(struct.payload);
        oprot.writeFieldEnd();
      }
      if (struct.role != null) {
        if (struct.isSetRole()) {
          oprot.writeFieldBegin(ROLE_FIELD_DESC);
          oprot.writeString(struct.role);
          oprot.writeFieldEnd();
        }
      }
      if (struct.druid_version != null) {
        if (struct.isSetDruid_version()) {
          oprot.writeFieldBegin(DRUID_VERSION_FIELD_DESC);
          oprot.writeString(struct.druid_version);
          oprot.writeFieldEnd();
        }
      }
      if (struct.environment != null) {
        if (struct.isSetEnvironment()) {
          oprot.writeFieldBegin(ENVIRONMENT_FIELD_DESC);
          oprot.writeString(struct.environment);
          oprot.writeFieldEnd();
        }
      }
      if (struct.datacenter != null) {
        if (struct.isSetDatacenter()) {
          oprot.writeFieldBegin(DATACENTER_FIELD_DESC);
          oprot.writeString(struct.datacenter);
          oprot.writeFieldEnd();
        }
      }
      if (struct.cluster_name != null) {
        if (struct.isSetCluster_name()) {
          oprot.writeFieldBegin(CLUSTER_NAME_FIELD_DESC);
          oprot.writeString(struct.cluster_name);
          oprot.writeFieldEnd();
        }
      }
      oprot.writeFieldStop();
      oprot.writeStructEnd();
    }

  }

  private static class DruidAdminLogEventTupleSchemeFactory implements org.apache.thrift.scheme.SchemeFactory {
    public DruidAdminLogEventTupleScheme getScheme() {
      return new DruidAdminLogEventTupleScheme();
    }
  }

  private static class DruidAdminLogEventTupleScheme extends org.apache.thrift.scheme.TupleScheme<DruidAdminLogEvent> {

    @Override
    public void write(org.apache.thrift.protocol.TProtocol prot, DruidAdminLogEvent struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol oprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      oprot.writeString(struct.audit_key);
      oprot.writeString(struct.audit_type);
      oprot.writeString(struct.author);
      oprot.writeString(struct.comment);
      oprot.writeString(struct.remote_address);
      oprot.writeString(struct.created_date);
      oprot.writeString(struct.payload);
      java.util.BitSet optionals = new java.util.BitSet();
      if (struct.isSetRole()) {
        optionals.set(0);
      }
      if (struct.isSetDruid_version()) {
        optionals.set(1);
      }
      if (struct.isSetEnvironment()) {
        optionals.set(2);
      }
      if (struct.isSetDatacenter()) {
        optionals.set(3);
      }
      if (struct.isSetCluster_name()) {
        optionals.set(4);
      }
      oprot.writeBitSet(optionals, 5);
      if (struct.isSetRole()) {
        oprot.writeString(struct.role);
      }
      if (struct.isSetDruid_version()) {
        oprot.writeString(struct.druid_version);
      }
      if (struct.isSetEnvironment()) {
        oprot.writeString(struct.environment);
      }
      if (struct.isSetDatacenter()) {
        oprot.writeString(struct.datacenter);
      }
      if (struct.isSetCluster_name()) {
        oprot.writeString(struct.cluster_name);
      }
    }

    @Override
    public void read(org.apache.thrift.protocol.TProtocol prot, DruidAdminLogEvent struct) throws org.apache.thrift.TException {
      org.apache.thrift.protocol.TTupleProtocol iprot = (org.apache.thrift.protocol.TTupleProtocol) prot;
      struct.audit_key = iprot.readString();
      struct.setAudit_keyIsSet(true);
      struct.audit_type = iprot.readString();
      struct.setAudit_typeIsSet(true);
      struct.author = iprot.readString();
      struct.setAuthorIsSet(true);
      struct.comment = iprot.readString();
      struct.setCommentIsSet(true);
      struct.remote_address = iprot.readString();
      struct.setRemote_addressIsSet(true);
      struct.created_date = iprot.readString();
      struct.setCreated_dateIsSet(true);
      struct.payload = iprot.readString();
      struct.setPayloadIsSet(true);
      java.util.BitSet incoming = iprot.readBitSet(5);
      if (incoming.get(0)) {
        struct.role = iprot.readString();
        struct.setRoleIsSet(true);
      }
      if (incoming.get(1)) {
        struct.druid_version = iprot.readString();
        struct.setDruid_versionIsSet(true);
      }
      if (incoming.get(2)) {
        struct.environment = iprot.readString();
        struct.setEnvironmentIsSet(true);
      }
      if (incoming.get(3)) {
        struct.datacenter = iprot.readString();
        struct.setDatacenterIsSet(true);
      }
      if (incoming.get(4)) {
        struct.cluster_name = iprot.readString();
        struct.setCluster_nameIsSet(true);
      }
    }
  }

  private static <S extends org.apache.thrift.scheme.IScheme> S scheme(org.apache.thrift.protocol.TProtocol proto) {
    return (org.apache.thrift.scheme.StandardScheme.class.equals(proto.getScheme()) ? STANDARD_SCHEME_FACTORY : TUPLE_SCHEME_FACTORY).getScheme();
  }
}

